name: Deploy to production

on:
  push:
    branches: ["master"]

jobs:
  build:
    name: Build docker image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Load secrets and save to app.env
        run: aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq 'to_entries|map("\(.key)=\(.value)")|.[]' -r > app.env

      # - name: Build, tag, and push docker image to Amazon ECR
      #   env:
      #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     REPOSITORY: simplebank
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
      #     docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        id: install
      
      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      
      - name: Update kube config
        run: aws eks update-kubeconfig --name KubeCluster-4mNCTwm0a8O0 --region ap-southeast-1
    
      - name: kubectl apply
        run: |
          kubectl apply -f aws/eks/aws-auth.yml
          kubectl apply -f aws/eks/deployment.yml
          kubectl apply -f aws/eks/service.yml
          kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.3.0/cert-manager.yaml
          kubectl apply -f aws/eks/issuer.yml
          kubectl apply -f aws/eks/ingress.yml